# Generated by Django 4.2.6 on 2023-11-14 03:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.EmailField(blank=True, max_length=254, null=True, verbose_name='created by')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('last_updated_by', models.EmailField(blank=True, max_length=254, null=True, verbose_name='created by')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('unit', models.CharField(max_length=100, verbose_name='unit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.EmailField(blank=True, max_length=254, null=True, verbose_name='created by')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('last_updated_by', models.EmailField(blank=True, max_length=254, null=True, verbose_name='created by')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('manufacturer', models.CharField(max_length=100, verbose_name='name')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variable_sensor_set', to='device.variable', verbose_name='variable')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.EmailField(blank=True, max_length=254, null=True, verbose_name='created by')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('last_updated_by', models.EmailField(blank=True, max_length=254, null=True, verbose_name='created by')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('manufacturer', models.CharField(max_length=100, verbose_name='name')),
                ('sensors', models.ManyToManyField(related_name='sensor_device_type_set', to='device.sensor', verbose_name='sensors')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.EmailField(blank=True, max_length=254, null=True, verbose_name='created by')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('last_updated_by', models.EmailField(blank=True, max_length=254, null=True, verbose_name='created by')),
                ('identifier', models.CharField(max_length=100, verbose_name='identifier')),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_device_set', to='device.devicetype', verbose_name='type of device')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
